{"version":3,"file":"13.345ed00a.js","sources":["../../../../../../src/routes/smtp/+page.svelte"],"sourcesContent":["<script>\n\timport { onMount } from 'svelte';\n\n\timport { Modal } from '@skeletonlabs/skeleton';\n\timport { modalStore } from '@skeletonlabs/skeleton';\n\n\texport let data;\n\n\tlet JWT = data.JWT;\n\tlet password = '';\n\tlet domain = '';\n\n\tconsole.log(data.domains);\n\n\t// Function to handle form submission\n\tconst submitForm = async () => {\n\t\ttry {\n\t\t\tconst apiEndpoint =\n\t\t\t\t'https://hosts.is-cool.me/api/SMTP?jwt=' +\n\t\t\t\tJWT +\n\t\t\t\t'&password=' +\n\t\t\t\tpassword +\n\t\t\t\t'&domain=' +\n\t\t\t\tdomain +\n\t\t\t\t'&action=save';\n\n\t\t\t// Make a GET request to the API endpoint\n\t\t\tconst response = await fetch(apiEndpoint, {\n\t\t\t\tmethod: 'GET',\n\t\t\t\theaders: {\n\t\t\t\t\t'Content-Type': 'application/json'\n\t\t\t\t}\n\t\t\t});\n\n\t\t\t// Handle the response (you can check status, etc.)\n\t\t\tif (response.ok) {\n\t\t\t\tconsole.log('Password saved successfully');\n\t\t\t\talert('Password saved successfully');\n\t\t\t} else {\n\t\t\t\talert('Failed to save password');\n\t\t\t\tconsole.error('Failed to save password');\n\t\t\t}\n\t\t} catch (error) {\n\t\t\tconsole.error('An error occurred:', error);\n\t\t}\n\t};\n\n\tonMount(() => {\n\t\t// Additional logic to run when the component mounts\n\t});\n</script>\n\n<!-- Heading for SMTP settings -->\n<h2 class=\"h2\">SMTP settings</h2>\n<br />\n\n{#if data && data.domains && data.domains.length > 0}\n\t<!-- Form for setting SMTP password -->\n\t<form on:submit|preventDefault={submitForm}>\n\t\t<label class=\"label center\">\n\t\t\t<span class=\"text-center\">Select a domain</span>\n\t\t\t<!-- Dropdown listing domains -->\n\t\t\t<select bind:value={domain} class=\"input\">\n\t\t\t\t{#each data.domains as { domain, record } (domain)}\n\t\t\t\t\t<option value={domain}>{domain}</option>\n\t\t\t\t{/each}\n\t\t\t</select>\n\t\t</label>\n\t\t<label class=\"label center\">\n\t\t\t<span class=\"text-center\">Set a SMTP password</span>\n\t\t\t<!-- Input field for the password -->\n\t\t\t<input\n\t\t\t\tbind:value={password}\n\t\t\t\tclass=\"input\"\n\t\t\t\ttype=\"password\"\n\t\t\t\tplaceholder=\"Password Here please\"\n\t\t\t/>\n\t\t</label>\n\t\t<!-- Button to save the password (changed type to submit) -->\n\t\t<button type=\"submit\" class=\"btn variant-filled\">Save Password</button>\n\t</form>\n\t<br />\n\t<button\n\t\tclass=\"btn variant-filled mb-2\"\n\t\ton:click={() => {\n\t\t\t//<script defer data-domain=\"{data.domain.name}.is-cool.me\" src=\"{env.PUBLIC_ANALYTICS_URL}/js/script.js\"></script>\n\t\t\tmodalStore.trigger({\n\t\t\t\ttype: 'alert',\n\t\t\t\ttitle: 'How to use SMTP',\n\t\t\t\tbody: `To connect to our SMTP server, you can use the following settings:\n                <br /><br />\n                <code>Host: hosts.is-cool.me</code><br />\n                <code>Port: 25</code><br />\n                <code>Email: anything @ your subdomain .is-cool.me</code><br />\n                <code>Username: domain without the .is-cool.me part</code><br />\n                <code>Password: Set by User</code><br />\n    `\n\t\t\t});\n\t\t}}\n\t>\n\t\tHow to use SMTP\n\t</button>\n{:else}\n\t<!-- Display a message if there are no domains or data is undefined -->\n\t<p class=\"text-center\">You have no domains yet. <a href=\"/register\">Let's change that!</a></p>\n{/if}\n"],"names":["insert_hydration","target","p","anchor","append_hydration","a","each_value","ctx","i","add_render_callback","select","form","label0","span0","label1","span1","input","button0","br","button1","option","set_data","t","t_value","create_if_block","h2","data","$$props","JWT","password","domain","submitForm","apiEndpoint","error","onMount","select_value","modalStore"],"mappings":"+iBAwGwB,2BAAyB,eAAoB,oBAAkB,wDAA/D,2BAAyB,wCAAoB,oBAAkB,qGAAtFA,EAA6FC,EAAAC,EAAAC,CAAA,SAA7CC,EAA0CF,EAAAG,CAAA,2GAzChFC,EAAAC,KAAK,mBAA+BA,EAAM,CAAA,kBAA/C,OAAIC,GAAA,EAAA,iGAHmB,iBAAe,8FASf,qBAAmB,6CAUG,eAAa,0CAoB/D,iBAEA,4HAzC4B,iBAAe,kNASf,qBAAmB,+IAUG,eAAa,qGAoB/D,iBAEA,6EAvCsBD,EAAM,CAAA,IAAA,QAAAE,GAAA,IAAAF,EAAA,CAAA,EAAA,KAAAG,CAAA,CAAA,iRAJ5BV,EAsBMC,EAAAU,EAAAR,CAAA,EArBLC,EAQOO,EAAAC,CAAA,EAPNR,EAA+CQ,EAAAC,CAAA,gBAE/CT,EAIQQ,EAAAF,CAAA,uDAJYH,EAAM,CAAA,EAAA,EAAA,SAM3BH,EASOO,EAAAG,CAAA,EARNV,EAAmDU,EAAAC,CAAA,gBAEnDX,EAKCU,EAAAE,CAAA,MAJYT,EAAQ,CAAA,CAAA,SAOtBH,EAAsEO,EAAAM,CAAA,kBAEvEjB,EAAKC,EAAAiB,EAAAf,CAAA,WACLH,EAmBQC,EAAAkB,EAAAhB,CAAA,qEA3CwBI,EAAU,CAAA,CAAA,CAAA,yCAKhCD,EAAAC,KAAK,qDADOA,EAAM,CAAA,CAAA,iBAUbA,EAAQ,CAAA,OAARA,EAAQ,CAAA,CAAA,2HARKA,EAAM,CAAA,EAAA,qJAAfA,EAAM,CAAA,yCAArBP,EAAuCC,EAAAmB,EAAAjB,CAAA,iCAAfI,EAAM,CAAA,EAAA,KAAAc,GAAAC,EAAAC,CAAA,cAAfhB,EAAM,CAAA,0GARrBA,EAAI,CAAA,GAAIA,EAAI,CAAA,EAAC,SAAWA,EAAI,CAAA,EAAC,QAAQ,OAAS,EAACiB,iDAHrC,eAAa,2FAAb,eAAa,iGAA5BxB,EAAgCC,EAAAwB,EAAAtB,CAAA,kBAChCH,EAAKC,EAAAiB,EAAAf,CAAA,qMAhDO,KAAAuB,CAAI,EAAAC,EAEXC,EAAMF,EAAK,IACXG,EAAW,GACXC,EAAS,GAEb,QAAQ,IAAIJ,EAAK,OAAO,QAGlBK,EAAU,SAAA,KAER,MAAAC,EACL,yCACAJ,EACA,aACAC,EACA,WACAC,EACA,gBAGa,MAAS,MAAME,EAAW,CACvC,OAAQ,MACR,QAAO,CACN,eAAgB,kBAAiB,KAKtB,IACZ,QAAQ,IAAI,6BAA6B,EACzC,MAAM,6BAA6B,IAEnC,MAAM,yBAAyB,EAC/B,QAAQ,MAAM,yBAAyB,SAEhCC,EAAK,CACb,QAAQ,MAAM,qBAAsBA,CAAK,IAI3CC,GAAO,IAAA,iBAeeJ,EAAMK,GAAA,IAAA,6BAUbN,EAAQ,KAAA,0BAcrBO,GAAW,QAAO,CACjB,KAAM,QACN,MAAO,kBACP,KAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA"}