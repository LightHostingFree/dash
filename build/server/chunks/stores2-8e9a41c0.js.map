{"version":3,"file":"stores2-8e9a41c0.js","sources":["../../../../node_modules/@skeletonlabs/skeleton/dist/utilities/Toast/stores.js"],"sourcesContent":["// Toast Store Queue\nimport { writable } from 'svelte/store';\nconst toastDefaults = { message: 'Missing Toast Message', autohide: true, timeout: 5000 };\n// Note for security; differentiates the queued toasts\nfunction randomUUID() {\n    const random = Math.random();\n    return Number(random).toString(32);\n}\n// If toast should auto-hide, wait X time, then close by ID\nfunction handleAutoHide(toast) {\n    if (toast.autohide === true) {\n        return setTimeout(() => {\n            toastStore.close(toast.id);\n        }, toast.timeout);\n    }\n}\nfunction toastService() {\n    const { subscribe, set, update } = writable([]);\n    return {\n        subscribe,\n        /** Add a new toast to the queue. */\n        trigger: (toast) => {\n            const id = randomUUID();\n            update((tStore) => {\n                // Trigger Callback\n                if (toast && toast.callback)\n                    toast.callback({ id, status: 'queued' });\n                // activate autohide when dismiss button is hidden.\n                if (toast.hideDismiss)\n                    toast.autohide = true;\n                // Merge with defaults\n                const tMerged = { ...toastDefaults, ...toast, id };\n                // Handle auto-hide, if needed\n                tMerged.timeoutId = handleAutoHide(tMerged);\n                // Push into store\n                tStore.push(tMerged);\n                // Return\n                return tStore;\n            });\n            return id;\n        },\n        /** Remove toast in queue*/\n        close: (id) => update((tStore) => {\n            if (tStore.length > 0) {\n                const index = tStore.findIndex((t) => t.id === id);\n                const selectedToast = tStore[index];\n                if (selectedToast) {\n                    // Trigger Callback\n                    if (selectedToast.callback)\n                        selectedToast.callback({ id, status: 'closed' });\n                    // Clear timeout\n                    if (selectedToast.timeoutId)\n                        clearTimeout(selectedToast.timeoutId);\n                    // Remove\n                    tStore.splice(index, 1);\n                }\n            }\n            return tStore;\n        }),\n        /** remain visible on hover */\n        freeze: (index) => update((tStore) => {\n            if (tStore.length > 0)\n                clearTimeout(tStore[index].timeoutId);\n            return tStore;\n        }),\n        /** cancel remain visible on leave */\n        unfreeze: (index) => update((tStore) => {\n            if (tStore.length > 0)\n                tStore[index].timeoutId = handleAutoHide(tStore[index]);\n            return tStore;\n        }),\n        /** Remove all toasts from queue */\n        clear: () => set([])\n    };\n}\nexport const toastStore = toastService();\n"],"names":[],"mappings":"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"}